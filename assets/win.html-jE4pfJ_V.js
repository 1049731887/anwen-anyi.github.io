import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as p,c,d as a,a as n,b as s,e as t}from"./app-CSYCge7H.js";const d="/img/build/build02.jpeg",g="/img/build/build01.jpeg",u="/img/build/build03.gif",b="/img/build/build04.gif",h="/img/build/build05.gif",m="/img/build/build06.png",v="/img/build/build07.png",_="/img/build/build08.png",f="/img/build/build09.png",k="/img/build/build10.gif",w="/img/build/build11.gif",y="/img/build/build12.gif",x={},q=t('<p>有的小伙伴想着自己编译一下 Alist<br> 不管是出于自己想折腾还是自己想改改源码哩.大家都可以编译~ (๑•́₃ •)</p><h2 id="windows版本编译教程" tabindex="-1"><a class="header-anchor" href="#windows版本编译教程"><span>Windows版本编译教程</span></a></h2><h2 id="_1-编译前准备" tabindex="-1"><a class="header-anchor" href="#_1-编译前准备"><span>1.编译前准备</span></a></h2><h3 id="_1-1-编译视频版教程" tabindex="-1"><a class="header-anchor" href="#_1-1-编译视频版教程"><span>1.1 编译视频版教程</span></a></h3>',4),B=n("h3",{id:"_1-2-编译之前的前提条件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-2-编译之前的前提条件"},[n("span",null,"1.2 编译之前的前提条件")])],-1),z={href:"https://github.com/alist-org/alist/blob/main/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"},N=n("p",null,"编译AList Go竟然需要 1.20+了...呜呜呜",-1),A=n("p",null,"我没记错前几个月才升级了1.18+...升级真快(´◔‸◔')”",-1),T=n("p",null,[n("strong",null,"编译之前我们需要先准备安装好以下软件:")],-1),C={href:"https://git-scm.com/download/win",target:"_blank",rel:"noopener noreferrer"},W=n("strong",null,"git",-1),G={href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"},O=n("strong",null,"golang 1.20+",-1),j={href:"https://gcc.gnu.org/",target:"_blank",rel:"noopener noreferrer"},$=n("strong",null,"gcc",-1),V={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},I=n("strong",null,"nodejs",-1),R={href:"https://www.npmjs.com/package/pnpm",target:"_blank",rel:"noopener noreferrer"},X=n("strong",null,"pnpm",-1),D=t(`<p>以上安装过程我就不赘述了...<strong>（安装问题都解决不了的话编译也够呛）</strong></p><p>以上软件安装好后我们先把 <strong>Go的代理改为国内</strong> 的..</p><p>安装好Golang后并且也将 &quot;<strong>环境变量&quot;</strong> 配置好，然后win+R 输入CMD打开DDos黑窗口(这里是用的Windows)</p><p>根据自己的配置输入：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct      // Windows
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct         // macOS 或 Linux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将代理改为国内,不然编译时会出错,前人血泪史之一... <strong>（踩坑一号）</strong></p><p><strong>然后我们改好后看看生效没有：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>CMD黑窗口输入go env查看（需要配置好环境变量哦先）

安装好默认的是：
<span class="token builtin class-name">set</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span><span class="token string">&quot;https://proxy.golang.org,direct&quot;</span>
修改代理后是
<span class="token builtin class-name">set</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>反正不管他默认的是啥，改就完事了！！！</strong></p><p><strong>以上就是编译前需要的准备 安装好5个软件，改一下代理 ..不难吧(ฅ&#39;ω&#39;ฅ)</strong></p><h3 id="_1-3-编译前端前准备" tabindex="-1"><a class="header-anchor" href="#_1-3-编译前端前准备"><span>1.3 编译前端前准备</span></a></h3>`,11),L=n("strong",null,"编译前我们看看文档怎么编译",-1),E={href:"https://github.com/alist-org/alist/blob/main/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"},P=t('<figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们需要编译前肯定是要先克隆一下<strong>前端</strong>和<strong>后端</strong>的代码（clone）</p><p>执行图上的两行命令在我们安装的 <strong>git</strong> 终端里面</p><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>你克隆到任意地方都行建议放到一个文件夹里面去,这样我们修改的时候也方便</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>alist.git是后端，alist-web.git是前端
无代理
<span class="token function">git</span> clone https://github.com/alist-org/alist.git
<span class="token function">git</span> clone --recurse-submodules https://github.com/alist-org/alist-web.git

代理 - （大白提供-可能服务中断了）
<span class="token function">git</span> clone https://hub.cooluc.com/alist-org/alist.git
<span class="token function">git</span> clone --recurse-submodules https://hub.cooluc.com/alist-org/alist-web.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前后端 拉取/克隆(clone)好了</p><p>但是我们拉取/克隆(clone)下来的前端里面只有一个 默认的英文语言文件</p><p>我们还需要去下载一个带中文的语言文件</p><h3 id="_1-4-手动下载语言包地址" tabindex="-1"><a class="header-anchor" href="#_1-4-手动下载语言包地址"><span>1.4 手动下载语言包地址</span></a></h3>`,10),Z={href:"https://crowdin.com/project/alist/zh-CN",target:"_blank",rel:"noopener noreferrer"},U=n("p",null,"这里是手动下载，还有命令自动下的哪个我没研究明白...害,卡了好几天了这个语言文件..",-1),Y=n("figure",null,[n("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),F=n("figure",null,[n("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),M=n("h3",{id:"_1-5-直接下载语言包直链",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-5-直接下载语言包直链"},[n("span",null,"1.5 直接下载语言包直链：")])],-1),S={href:"https://crowdin.com/backend/download/project/alist/zh-CN.zip",target:"_blank",rel:"noopener noreferrer"},H=t(`<p>上面的语言文件放进去后我们去终端里面输入命令：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>node ./scripts/i18n.mjs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行完毕语言里面会出现一个 <strong>entry.ts</strong> 的文件，这样我们就可以用了</p><figure><img src="`+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>以上软件安装并且配置好环境变量了，Go 代理设置好了，语言包文件下载好了 ，我们编译前准备工作就可以了</p><h2 id="_2-编译前端" tabindex="-1"><a class="header-anchor" href="#_2-编译前端"><span>2.编译前端</span></a></h2><p>首先CD进入 <strong><code>alist-web</code></strong> 前端文件夹内，</p><p>然后输入 <strong>pnpm install</strong> 将 <strong>node_modules</strong> （包管理工具下载安装的包的文件夹），下载下来，</p><p>别问问什么不用 <strong>npm</strong> 要用 <strong>pnpm</strong> ...问就是用 <strong>pnpm</strong> 就完了...这个也是血的教训.. <strong>%&gt;_&lt;% <sup>（踩坑2号）</sup></strong></p><p>中间自己改源码的过程就不演示了，自己想怎么改就怎怎么改</p><p>改完了 执行如下命令将前端文件进行编译： <strong><code>pnpm build</code></strong> <strong><code>npm run build</code></strong> 这两个二选一都行</p>',11),J=t('<figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-1-编译前端期间可能会遇到的问题" tabindex="-1"><a class="header-anchor" href="#_2-1-编译前端期间可能会遇到的问题"><span>2.1 编译前端期间可能会遇到的问题</span></a></h3><h4 id="输入pnpm-install会报错-三号坑" tabindex="-1"><a class="header-anchor" href="#输入pnpm-install会报错-三号坑"><span>输入<code>pnpm install</code>会报错 <sup>(三号坑)</sup></span></a></h4><h4 id="如果你输入-pnpm-install-出现如下图中的错误" tabindex="-1"><a class="header-anchor" href="#如果你输入-pnpm-install-出现如下图中的错误"><span>如果你输入 pnpm install 出现如下图中的错误</span></a></h4><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="上述报错中的解决方案" tabindex="-1"><a class="header-anchor" href="#上述报错中的解决方案"><span>上述报错中的解决方案</span></a></h4><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果没出现上述的错误能正常编译 忽略即可！</p><h4 id="输入-pnpm-install-会报错-四号坑" tabindex="-1"><a class="header-anchor" href="#输入-pnpm-install-会报错-四号坑"><span>输入 pnpm install 会报错 (四号坑)</span></a></h4><h4 id="如果你输入-pnpm-install-出现如下图中的错误-1" tabindex="-1"><a class="header-anchor" href="#如果你输入-pnpm-install-出现如下图中的错误-1"><span>如果你输入 pnpm install 出现如下图中的错误</span></a></h4><figure><img src="'+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>上述问题的问题所在以及解决方案</strong></p><p>问题所在</p><ul><li><p>看看你前端的 <strong><code> solid-router</code></strong> 这个文件夹里面是不是空的..估计是空的</p></li><li><p>下载前端的时候没有带 <code>--recurse-submodules</code> 参数导致附属的文件没有下载下来</p></li></ul><p>解决方案</p><ul><li>下载前端带上 <code>--recurse-submodules</code> 参数去下载</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>无代理
<span class="token function">git</span> clone --recurse-submodules https://github.com/alist-org/alist-web.git

代理 - （大白提供）
<span class="token function">git</span> clone --recurse-submodules https://hub.cooluc.com/alist-org/alist-web.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-编译后端" tabindex="-1"><a class="header-anchor" href="#_3-编译后端"><span>3.编译后端</span></a></h2><ol><li>在前端编译好后我们就会看到一个 <strong><code>&quot;dist&quot;</code></strong> 的文件夹</li><li>我们移动一下把 <strong><code>&quot;dist&quot;</code></strong> 目录移动到的后端的 <strong><code>&quot;public&quot;</code></strong> 目录里面去即可</li><li>虽然里面已经有了一个 <strong>&quot;dist&quot;</strong> 文件夹，不用管直接覆盖</li></ol><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将编译好的前端移文件动到后端里面去，准备编译</p><p><strong>&quot;dist&quot;</strong> 目录移动到 <strong><code>&quot;public&quot;</code></strong> 去之后，我们就可以编译了（如果有改代码的需求自己改完再编译）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">appName</span><span class="token operator">=</span><span class="token string">&quot;alist&quot;</span>
<span class="token assign-left variable">builtAt</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&#39;%F %T %z&#39;</span><span class="token variable">)</span></span>&quot;</span>
<span class="token assign-left variable">goVersion</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>go version <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/go version //&#39;</span><span class="token variable">)</span></span>
<span class="token assign-left variable">gitAuthor</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> show <span class="token parameter variable">-s</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;format:%aN &lt;%ae&gt;&#39;</span> HEAD<span class="token variable">)</span></span>
<span class="token assign-left variable">gitCommit</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>format:<span class="token string">&quot;%h&quot;</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> describe <span class="token parameter variable">--long</span> <span class="token parameter variable">--tags</span> <span class="token parameter variable">--dirty</span> <span class="token parameter variable">--always</span><span class="token variable">)</span></span>
<span class="token assign-left variable">webVersion</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">wget</span> -qO- <span class="token parameter variable">-t1</span> <span class="token parameter variable">-T2</span> <span class="token string">&quot;https://api.github.com/repos/alist-org/alist-web/releases/latest&quot;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;tag_name&quot;</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">&quot;:&quot;</span> <span class="token string">&#39;{print $2}&#39;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/\\&quot;//g;s/,//g;s/ //g&#39;</span><span class="token variable">)</span></span>
<span class="token assign-left variable">ldflags</span><span class="token operator">=</span><span class="token string">&quot;\\
-w -s \\
-X &#39;github.com/alist-org/alist/v3/internal/conf.BuiltAt=<span class="token variable">$builtAt</span>&#39; \\
-X &#39;github.com/alist-org/alist/v3/internal/conf.GoVersion=<span class="token variable">$goVersion</span>&#39; \\
-X &#39;github.com/alist-org/alist/v3/internal/conf.GitAuthor=<span class="token variable">$gitAuthor</span>&#39; \\
-X &#39;github.com/alist-org/alist/v3/internal/conf.GitCommit=<span class="token variable">$gitCommit</span>&#39; \\
-X &#39;github.com/alist-org/alist/v3/internal/conf.Version=<span class="token variable">$version</span>&#39; \\
-X &#39;github.com/alist-org/alist/v3/internal/conf.WebVersion=<span class="token variable">$webVersion</span>&#39; \\
&quot;</span>
go build <span class="token parameter variable">-ldflags</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$ldflags</span>&quot;</span> <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有人看到这么一大坨这怎么执行...我们可以创建一个 &quot; <strong>.sh</strong>&quot; 后缀的文件，然后把这一坨复制粘贴进去即可</p><p>‪如果怕自己创建的 <strong>.sh</strong> 后缀 文件不能用我们可以复制粘贴一个已经有的然后把里面的内容替换了即可</p><h3 id="_3-1-演示创建-sh" tabindex="-1"><a class="header-anchor" href="#_3-1-演示创建-sh"><span>3.1 <a href="#_3-1-%E6%BC%94%E7%A4%BA%E5%88%9B%E5%BB%BA-sh">演示创建.sh</a></span></a></h3><figure><img src="`+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',27),K=n("strong",null,"可以直接双击执行",-1),Q={href:"http://run.sh",target:"_blank",rel:"noopener noreferrer"},nn=n("strong",null,"（可能大概需要1-2分钟）",-1),sn=n("p",null,"我这里的Windows自然是.exe后缀的，如果是Linux，那肯定出现的是二进制文件",-1),an=n("figure",null,[n("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),en=n("p",null,[s("‪好了，以上教程就是本次编译的教程啦... 想折腾的自己折腾吧...有想试试的 可以试试看..."),n("strong",null,"(‾◡◝)")],-1);function tn(ln,on){const o=i("BiliBili"),e=i("ExternalLinkIcon"),l=i("Badge");return p(),c("div",null,[q,a(o,{bvid:"BV1ye4y1m7e1"}),B,n("p",null,[s("大家可以看一下这里需要啥："),n("a",z,[s("https://github.com/alist-org/alist/blob/main/CONTRIBUTING.md"),a(e)])]),N,A,T,n("ol",null,[n("li",null,[n("a",C,[W,a(e)])]),n("li",null,[n("a",G,[O,a(e)])]),n("li",null,[n("a",j,[$,a(e)])]),n("li",null,[n("a",V,[I,a(e)])]),n("li",null,[n("a",R,[X,a(e)])])]),D,n("p",null,[L,s("："),n("a",E,[s("https://github.com/alist-org/alist/blob/main/CONTRIBUTING.md"),a(e)])]),P,n("p",null,[n("strong",null,[n("a",Z,[s("https://crowdin.com/project/alist/zh-CN"),a(e)])])]),U,Y,F,M,n("p",null,[n("strong",null,[n("a",S,[s("https://crowdin.com/backend/download/project/alist/zh-CN.zip"),a(e)])])]),H,n("p",null,[s("编译好后，会看到一个叫 "),a(l,{text:"dist",type:"info"}),s(" 的文件夹，这个就是我们编译好的内容一会我们移动到后端里面去")]),J,n("p",null,[s("我们创建好了，"),K,s("，或者在命令行运行 这个我们刚刚修改的 "),n("strong",null,[n("a",Q,[s("run.sh"),a(e)])]),s(" 文件也行")]),n("p",null,[s("运行好了 "),nn,s(" 目录里面会出现一个"),a(l,{text:"alist.exe",type:"info"}),s(" 的文件 这就是编译好了")]),sn,an,en])}const cn=r(x,[["render",tn],["__file","win.html.vue"]]),dn=JSON.parse('{"path":"/index/build/win.html","title":"Windows编译教程","lang":"zh-CN","frontmatter":{"title":"Windows编译教程","icon":"fa-brands fa-windows","order":110,"author":"安稳","date":"2023-01-01T00:00:00.000Z","category":["使用指南"],"tag":["AList魔改教程","自己编译","编译AList教程","Build","Windows"],"sticky":true,"star":true,"headerDepth":6,"collapsible":false,"description":" 有的小伙伴想着自己编译一下 Alist 不管是出于自己想折腾还是自己想改改源码哩.大家都可以编译~ (๑•́₃ •) Windows版本编译教程 1.编译前准备 1.1 编译视频版教程 ","head":[["meta",{"property":"og:url","content":"https://anwen-anyi/anwen-anyi.github.io/index/build/win.html"}],["meta",{"property":"og:site_name","content":"安安稳稳"}],["meta",{"property":"og:title","content":"Windows编译教程"}],["meta",{"property":"og:description","content":" 有的小伙伴想着自己编译一下 Alist 不管是出于自己想折腾还是自己想改改源码哩.大家都可以编译~ (๑•́₃ •) Windows版本编译教程 1.编译前准备 1.1 编译视频版教程 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://anwen-anyi/anwen-anyi.github.io/img/build/build02.jpeg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-03T13:16:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Windows编译教程"}],["meta",{"property":"article:author","content":"安稳"}],["meta",{"property":"article:tag","content":"AList魔改教程"}],["meta",{"property":"article:tag","content":"自己编译"}],["meta",{"property":"article:tag","content":"编译AList教程"}],["meta",{"property":"article:tag","content":"Build"}],["meta",{"property":"article:tag","content":"Windows"}],["meta",{"property":"article:published_time","content":"2023-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-03T13:16:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Windows编译教程\\",\\"image\\":[\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build02.jpeg\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build01.jpeg\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build03.gif\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build04.gif\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build05.gif\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build06.png\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build07.png\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build08.png\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build09.png\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build10.gif\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build11.gif\\",\\"https://anwen-anyi/anwen-anyi.github.io/img/build/build12.gif\\"],\\"datePublished\\":\\"2023-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-03T13:16:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"安稳\\"}]}"]]},"headers":[{"level":2,"title":"Windows版本编译教程","slug":"windows版本编译教程","link":"#windows版本编译教程","children":[]},{"level":2,"title":"1.编译前准备","slug":"_1-编译前准备","link":"#_1-编译前准备","children":[{"level":3,"title":"1.1 编译视频版教程","slug":"_1-1-编译视频版教程","link":"#_1-1-编译视频版教程","children":[]},{"level":3,"title":"1.2 编译之前的前提条件","slug":"_1-2-编译之前的前提条件","link":"#_1-2-编译之前的前提条件","children":[]},{"level":3,"title":"1.3 编译前端前准备","slug":"_1-3-编译前端前准备","link":"#_1-3-编译前端前准备","children":[]},{"level":3,"title":"1.4 手动下载语言包地址","slug":"_1-4-手动下载语言包地址","link":"#_1-4-手动下载语言包地址","children":[]},{"level":3,"title":"1.5 直接下载语言包直链：","slug":"_1-5-直接下载语言包直链","link":"#_1-5-直接下载语言包直链","children":[]}]},{"level":2,"title":"2.编译前端","slug":"_2-编译前端","link":"#_2-编译前端","children":[{"level":3,"title":"2.1 编译前端期间可能会遇到的问题","slug":"_2-1-编译前端期间可能会遇到的问题","link":"#_2-1-编译前端期间可能会遇到的问题","children":[{"level":4,"title":"输入pnpm install会报错 (三号坑)","slug":"输入pnpm-install会报错-三号坑","link":"#输入pnpm-install会报错-三号坑","children":[]},{"level":4,"title":"如果你输入 pnpm install 出现如下图中的错误","slug":"如果你输入-pnpm-install-出现如下图中的错误","link":"#如果你输入-pnpm-install-出现如下图中的错误","children":[]},{"level":4,"title":"上述报错中的解决方案","slug":"上述报错中的解决方案","link":"#上述报错中的解决方案","children":[]},{"level":4,"title":"输入 pnpm install 会报错 (四号坑)","slug":"输入-pnpm-install-会报错-四号坑","link":"#输入-pnpm-install-会报错-四号坑","children":[]},{"level":4,"title":"如果你输入 pnpm install 出现如下图中的错误","slug":"如果你输入-pnpm-install-出现如下图中的错误-1","link":"#如果你输入-pnpm-install-出现如下图中的错误-1","children":[]}]}]},{"level":2,"title":"3.编译后端","slug":"_3-编译后端","link":"#_3-编译后端","children":[{"level":3,"title":"3.1 演示创建.sh","slug":"_3-1-演示创建-sh","link":"#_3-1-演示创建-sh","children":[]}]}],"git":{"createdTime":1684647523000,"updatedTime":1691068590000,"contributors":[{"name":"AnWen-anyi","email":"anwen_anyi@foxmail.com","commits":2}]},"readingTime":{"minutes":6.07,"words":1821},"filePathRelative":"index/build/win.md","localizedDate":"2023年1月1日","autoDesc":true,"excerpt":"<!-- 你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。 -->\\n"}');export{cn as comp,dn as data};
